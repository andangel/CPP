// 申请堆空间.cpp : 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include <stdlib.h>
/*
	1.需要引用<stdlib.h>头文件
	2.malloc函数申请堆空间
	3.参数指定堆区分配多大的空间
	4.如果成功,返回值:这个堆区的首元素地址
	5.如果失败,返回值:NULL
	6.默认返回void *
	7.动态分配空间,如果程序没有结束,不会自动释放,需要手动释放
	8.手动释放free()
	9.free()不是释放变量.而是释放指针变量所指向的内存.
	10.同一块堆区内存只能释放一次
	11.内存释放不是指内存消失,而是这块内存用户不能再使用,系统回收了,如果再使用,就是操作野指针
*/

int main()
{
	int *p=NULL;
	int a;//定义一个栈区变量,栈区变量释放由系统管理
    p=(int *)malloc(sizeof(int));//这里要做类型转换
	if (p==NULL)
	{
		printf("堆内存分配失败\n");
		return -1;//表示返回一个代数值，一般用在子函数结尾。按照程序开发的一般惯例，表示该函数失败；
	}
	*p = 10;
	printf("*p=%d\n", *p);
	if (p!=NULL)
	{
		free(p);//释放堆空间
		p = NULL;//这一步必须要有,否则会死循环.
	}
	
    return 0;
}

